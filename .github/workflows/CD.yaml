# name: Release-dep-check-e2e

# env:
#   URI: staging-url  
  
# on:
#   workflow_call:                  # manually triggered

# jobs:

#   selenium:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Selenium e2e tests
#       run: dotnet test ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/myapp/SeleniumTest.dll /Settings:SeleniumTest.runsettings --logger:"trx;LogFileName=selenium.trx"
  
#     # Upload results of selenium tests
#     - uses: actions/upload-artifact@v2
#       with:
#         name: Selenium Tests Results
#         path: TestResults/selenium.trx


#       # - uses: actions/upload-artifact@v2
#       #   name: upload E2E report
#       #   with:
#       #     name: E2Ereport
#       #     path: /report/e2ereport.html

#   dependency_check:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v2

#       - name: Depcheck
#         uses: dependency-check/Dependency-Check_Action@main
#         id: Depcheck
#         with:
#           project: 'BPCalculator.csproj'
#           path: '.'
#           format: 'HTML'    
#           args: >
#             --failOnCVSS 8            
#           # fail if CVSS score (CVE scoring system) is High >=8
          
#       - name: Upload Test results
#         uses: actions/upload-artifact@master
#         with:
#           name: Depcheck report
#           path: /report/Depcheck.html

#   zap_baseline_scan_pen_test:

#     runs-on: ubuntu-latest
#     steps:

#     - name: Pull Docker image for ZAP
#       run: docker pull owasp/zap2docker-weekly

#     - name: Run baseline scan
#       run: docker run -v /report:/zap/wrk/:rw --user root -t owasp/zap2docker-weekly zap-baseline.py -t ${{env.URI}} -I -r zapreport.html
  
#     - uses: actions/upload-artifact@v2
#       name: upload ZAP report
#       with:
#         name: ZAPreport
#         path: /report/zapreport.html