name: Build Test

on:
  push:

jobs:
  #Setup and Build
  build:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: 5.0.x
      - name: Build
        run : dotnet build --configuration Release

  # Analyse code
  call-workflow-2-in-local-repo:
    uses: ./.github/workflows/Sonar_Code_Analysis.yml
      # # Run Unit Tests
      # - name: Run Unit Tests
      #   run: dotnet test Unit_Tests_Project/Unit_Tests_Project.csproj

      # # Run Specflow acceptance tests
      # - name: Run Acceptance Tests
      #   run: dotnet test Acceptance_Tests_Project/Acceptance_Tests_Project.csproj

      # - name: Unit-Test-Results
      #   uses: dorny/test-reporter@v1
      #   with: 
      #     artifacts: ''
      #     name: Unit Test report
      #     list-tests: 'all'
      #     path: ${{github.workspace}}/reports
      #     reporter: dotnet-trx # format of the test results

      # # Create NuGet package
      # - name: Package for NuGet
      #   run: dotnet pack BPCalculator/BPCalculator.csproj /p:PackageVersion=1.0.0 --configuration Release --output

      # # Push to Nuget repo


      # # Build Docker Image
      # - name: Build the Docker image
      #   run: docker build . --file Dockerfile --tag my-image-name:$(date +%s)

      # # Upload to DockerHub 
      # - name: Log in to Docker Hub
      #   uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
      #   with:
      #     username: ${{ secrets.DOCKER_USERNAME }}
      #     password: ${{ secrets.DOCKER_PASSWORD }}

      # - name: Extract metadata (tags, labels) for Docker
      #   id: meta
      #   uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
      #   with:
      #     images: my-docker-hub-namespace/my-docker-hub-repository
        
      # - name: Build and push Docker image
      #   uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
      #   with:
      #     context: .
      #     push: true
      #     tags: ${{ steps.meta.outputs.tags }}
      #     labels: ${{ steps.meta.outputs.labels }}

      # # Dependency Owasp checks
      # - name: Depcheck
      #   uses: dependency-check/Dependency-Check_Action@main
      #   id: Depcheck
      #   with:
      #     project: 'BPCalc'
      #     path: '.'
      #     format: 'HTML'    
      #     args: >
      #       --failOnCVSS 8            
      #     # fail if CVSS score (CVE scoring system) is High >=8
            
      # - name: Upload Test results
      #   uses: actions/upload-artifact@master
      #   with:
      #     name: Depcheck report
      #     path: ${{github.workspace}}/reports

    
    # - name: Publish
    #   run: dotnet publish -c Release -o '${{ ebv.AZURE_WEBAPP_PACKAGE_PATH}}'/myapp 
    
    # # Deploys to Azure
    # - name: Deploy to azure
    #   uses: azure/webapps-deploy@v2
    #   with: 
    #     app-name: ${{ env.MY_WEBAPP_NAME}}
    #     publish_profile: ${{ secrets.DC_BMI_WEBAPP_PUBLISH_KEY}}
    #     package: '${{ ebv.AZURE_WEBAPP_PACKAGE_PATH}}'/myapp
    #   env:
    #     MY_WEBAPP_NAME: DC_BMI_WEBAPP 
    #     #TODO: BELOW PATH
    #     AZURE_WEBAPP_PACKAGE_PATH: "C:\Users\darra\OneDrive\Desktop\CSD REPO MS VS\BPCalculator\BPCalculator.csproj" # set this path to your web app project
    #     #C:\Users\darra\OneDrive\Desktop\CSD REPO MS VS\BPCalculator.sln

